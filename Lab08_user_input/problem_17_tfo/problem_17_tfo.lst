     1                                  bits 32
     2                                  global start
     3                                  
     4                                  ; A file name is given (defined in the data segment). Create a file with the given name, then read numbers from the keyboard and write only the numbers divisible by 7 to file, until the value '0' is read from the ke
     5                                  
     6                                  extern exit, fopen, fclose, scanf, fprintf
     7                                  import exit msvcrt.dll
     8                                  import fclose msvcrt.dll
     9                                  import fopen msvcrt.dll
    10                                  import scanf msvcrt.dll
    11                                  import fprintf msvcrt.dll
    12                                  
    13                                  segment data use32 class=data
    14 00000000 66696C652E74787400          file_name db "file.txt", 0
    15 00000009 7700                        acces_mode db "w", 0
    16 0000000B 256400                      format db "%d", 0
    17                                      
    18                                      len equ 256
    19 0000000E FFFFFFFF                    file_descriptor dd -1
    20 00000012 00<rept>                    array times len db 0 ; we will hold the numbers here
    21                                  
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ; create a file for writing
    25 00000000 68[09000000]                    push dword acces_mode
    26 00000005 68[00000000]                    push dword file_name
    27 0000000A FF15[00000000]                  call [fopen]
    28 00000010 83C408                          add esp, 4*2
    29                                          
    30 00000013 A3[0E000000]                    mov [file_descriptor], eax
    31                                          
    32 00000018 83F800                          cmp eax, 0
    33 0000001B 7445                            je theEnd
    34                                          
    35 0000001D 68[12000000]                    push dword array
    36 00000022 68[0B000000]                    push dword format
    37 00000027 FF15[00000000]                  call [scanf]
    38 0000002D 83C408                          add esp, 4*2
    39                                          
    40 00000030 BE[12000000]                    mov esi, array
    41 00000035 89C1                            mov ecx, eax
    42                                          
    43                                          run:
    44 00000037 AC                                  lodsb   ;   al:= the numbers from array
    45 00000038 B400                                mov ah, 0
    46 0000003A B307                                mov bl, 7
    47 0000003C F6F3                                div bl  ; we divide the number with 7   
    48                                              
    49 0000003E 80FC00                              cmp ah, 0   ;   we check divisibility
    50 00000041 751C                                jne notDivisible
    51                                              
    52 00000043 BA00000000                          mov edx, 0
    53 00000048 88C2                                mov dl, al
    54                                                  
    55 0000004A 52                                  push edx
    56 0000004B 68[0B000000]                        push dword format
    57 00000050 FF35[0E000000]                      push dword [file_descriptor]
    58 00000056 FF15[00000000]                      call [fprintf]
    59 0000005C 83C40C                              add esp, 4*3
    60                                              
    61                                              notDivisible:  
    62 0000005F 49                                      dec ecx
    63 00000060 EBD5                                    jmp run
    64                                      
    65                                          theEnd:
    66 00000062 6A00                                push dword 0
    67 00000064 FF15[00000000]                      call [exit]

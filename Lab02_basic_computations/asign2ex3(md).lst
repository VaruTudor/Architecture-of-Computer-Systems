     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 01                          a db 1
    14 00000001 02                          b db 2
    15 00000002 03                          c db 3
    16 00000003 0400                        d dw 4
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ;d*(d+2*a)/(b*c)
    21 00000000 A0[00000000]                    mov al,[a]      ;AL:=a
    22 00000005 B402                            mov ah,2        ;AH:=2
    23 00000007 F6E4                            mul ah          ;AX:AL*AH=a*2
    24 00000009 660305[03000000]                add ax,[d]      ;AX:=AX+d=(d+2*a)
    25 00000010 66F725[03000000]                mul word [d]    ;DX:AX:=AX*d
    26 00000017 6689C3                          mov bx,ax       ;BX:=AX=d*(d+2*a)
    27 0000001A 66A1[01000000]                  mov ax,[b]      ;AX:=b
    28 00000020 F625[02000000]                  mul byte [c]    ;AX:=AX*c=(b*c)
    29 00000026 6689C1                          mov cx,ax       ;CX:=AX=(b*c)       
    30 00000029 6689D8                          mov ax,bx       ;AX:=BX=d*(d+2*a)
    31 0000002C 66F7F1                          div cx
    32                                          
    33                                          
    34                                          
    35                                          
    36                                          
    37                                      
    38                                          ; exit(0)
    39 0000002F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    40 00000031 FF15[00000000]                  call    [exit]       ; call exit to terminate the program

     1                                  ;promblem 17_add&subb_signed
     2                                  bits 32 ; assembling for the 32 bits architecture
     3                                  
     4                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     5                                  global start        
     6                                  
     7                                  ; declare external functions needed by our program
     8                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     9                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14                                      ;a - byte, b - word, c - double word, d - qword
    15 00000000 04                          a db 4
    16 00000001 0200                        b dw 2
    17 00000003 FBFFFFFF                    c dd -5
    18 00000007 0100000000000000            d dq 1
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ;(c+d-a)-(d-c)-b
    24 00000000 A1[03000000]                    mov eax,[c]
    25 00000005 99                              cdq                 ;edx:eax:=c
    26 00000006 0305[07000000]                  add eax,dword[d]
    27 0000000C 1315[0B000000]                  adc edx,dword[d+4]  ;edx:eax:=c+d
    28 00000012 2A05[00000000]                  sub al,[a]          ;edx:eax:=c+d-a
    29                                          
    30 00000018 89C3                            mov ebx,eax
    31 0000001A 89D1                            mov ecx,edx         ;ecx:ebx:=c+d-a
    32                                          
    33 0000001C A1[07000000]                    mov eax,dword[d]
    34 00000021 8B15[0B000000]                  mov edx,dword[d+4]  ;edx:eax:=d  
    35 00000027 2B05[03000000]                  sub eax,[c]         ;edx:eax:=d-c
    36                                          
    37 0000002D 29C3                            sub ebx,eax
    38 0000002F 19D1                            sbb ecx,edx         ;ecx:ebx:=(c+d-a)-(d-c)
    39                                          
    40 00000031 662B1D[01000000]                sub bx,[b]          ;ecx:ebx:=(c+d-a)-(d-c)-b
    41                                          
    42                                          ; exit(0)
    43 00000038 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 0000003A FF15[00000000]                  call    [exit]       ; call exit to terminate the program

     1                                  ;promblem 2_mul&div_signed
     2                                  bits 32 ; assembling for the 32 bits architecture
     3                                  
     4                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     5                                  global start        
     6                                  
     7                                  ; declare external functions needed by our program
     8                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     9                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14                                      ;a,b,c-byte; d-doubleword; e-qword
    15 00000000 01                          a db 1
    16 00000001 06                          b db 6
    17 00000002 03                          c db 3
    18 00000003 04000000                    d dd 4
    19 00000007 0500000000000000            e dq 5
    20                                  
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ;2/(a+b*c-9)+e-d
    25 00000000 A0[01000000]                    mov al,[b]
    26 00000005 F62D[02000000]                  imul byte[c]         ;ax:=b*c
    27                                          
    28 0000000B 8A1D[00000000]                  mov bl,[a]
    29 00000011 6698                            cbw            ;bx:=a
    30                                          
    31 00000013 00D8                            add al,bl
    32 00000015 10FC                            adc ah,bh           ;ax:=a+b*c
    33                                          
    34 00000017 6683E809                        sub ax,9            ;ax:=a+b*c-9
    35 0000001B 6689C3                          mov bx,ax           ;bx:=a+b*c-9
    36                                          
    37 0000001E 66B80200                        mov ax,2
    38 00000022 6699                            cwd
    39 00000024 66F7FB                          idiv bx              ;dx:=dx:ax%bx ax:=dx:ax/bx=2/(a+b*c-9)
    40                                          
    41 00000027 66BA0000                        mov dx,0
    42                                          
    43 0000002B 6652                            push dx
    44 0000002D 6650                            push ax
    45 0000002F 58                              pop eax             ;eax:=2/(a+b*c-9)
    46                                          
    47 00000030 2B05[03000000]                  sub eax,[d]         ;eax:=2/(a+b*c-9)-d
    48 00000036 99                              cdq
    49                                          
    50 00000037 8B1D[07000000]                  mov ebx,[e]
    51 0000003D 8B0D[0B000000]                  mov ecx,[e+4]       ;ecx:ebx:=e
    52                                          
    53 00000043 01D8                            add eax,ebx
    54 00000045 11CA                            adc edx,ecx         ;edx:eax:=2/(a+b*c-9)+e-d
    55                                      
    56                                          ; exit(0)
    57 00000047 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    58 00000049 FF15[00000000]                  call    [exit]       ; call exit to terminate the program

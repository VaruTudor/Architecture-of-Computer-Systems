     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit,printf,fopen,fread,fclose
     6                                  import exit msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import fopen msvcrt.dll
     9                                  import fread msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 66696C652E74787400          file_name db "file.txt", 0
    14 00000009 7200                        acces_mode db "r", 0
    15 0000000B 746865206E756D6265-         result db "the number of even digits is %d", 0
    15 00000014 72206F66206576656E-
    15 0000001D 206469676974732069-
    15 00000026 7320256400         
    16                                      
    17                                      len equ 256
    18 0000002B FFFFFFFF                    file_descriptor dd -1
    19                                      
    20 0000002F 00<rept>                    text times len db 0
    21                                      
    22                                      ;A text file is given. Read the content of the file, count the number of even digits and display the result on the screen. The name of text file is defined in the data segment.
    23                                  segment code use32 class=code
    24                                      start:
    25 00000000 68[09000000]                    push dword acces_mode ; the next 4 instructions open the file for reading
    26 00000005 68[00000000]                    push dword file_name
    27 0000000A FF15[00000000]                  call [fopen]
    28 00000010 83C408                          add esp, 4*2    
    29                                          
    30 00000013 A3[2B000000]                    mov [file_descriptor], eax ; we kkep the identifier in eax
    31                                          
    32 00000018 83F800                          cmp eax, 0  ; if eax is 0 we terminate the prorgam
    33 0000001B 746A                            je theEnd
    34                                          
    35 0000001D FF35[2B000000]                  push dword [file_descriptor]
    36 00000023 6800010000                      push len
    37 00000028 6A01                            push 1
    38 0000002A 68[2F000000]                    push dword text
    39 0000002F FF15[00000000]                  call [fread]
    40 00000035 83C410                          add esp, 4*4
    41                                          
    42 00000038 89C1                            mov ecx, eax    ; we  reapeat the for each element read from the file
    43 0000003A FC                              cld
    44 0000003B B300                            mov bl, 0; we count the number of even digits in bl
    45 0000003D BE[2F000000]                    mov esi, text
    46                                          
    47                                          whilee:
    48 00000042 AC                                  lodsb   ;al:= bytes from text
    49 00000043 D0D8                                rcr al,1    ; in cf we will have the last binary digit
    50                                              
    51 00000045 B700                                mov bh, 0   ; we put the last binary digit in bh
    52 00000047 80D700                              adc bh, 0
    53                                              
    54 0000004A 80FF00                              cmp bh, 0
    55 0000004D 750B                                jne raise
    56                                              
    57 0000004F 49                                  dec ecx
    58 00000050 83F900                              cmp ecx, 0
    59 00000053 740D                                je next
    60                                              
    61 00000055 83F900                              cmp ecx, 0
    62 00000058 75E8                                jne whilee
    63                                              
    64                                              raise:
    65 0000005A FEC3                                    inc bl
    66 0000005C 48                                      dec eax
    67 0000005D 83F800                                  cmp eax, 0
    68 00000060 75E0                                    jne whilee
    69                                                  
    70                                                  
    71                                          next:
    72 00000062 B800000000                          mov eax,0
    73 00000067 88D8                                mov al, bl
    74                                              
    75 00000069 50                                  push eax
    76 0000006A 68[0B000000]                        push dword result
    77 0000006F FF15[00000000]                      call [printf]
    78 00000075 83C408                              add esp, 4*2
    79                                              
    80 00000078 FF35[2B000000]                      push dword[file_descriptor]
    81 0000007E FF15[00000000]                      call [fclose]
    82 00000084 83C404                              add esp, 4
    83                                          
    84                                          
    85                                          theEnd:
    86 00000087 6A00                                push dword 0
    87 00000089 FF15[00000000]                      call [exit]

     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit, printf, scanf
     6                                  import exit msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  
    10                                  segment data use32 class=data
    11 00000000 00000000                    a dd 0
    12 00000004 00000000                    b dd 0
    13                                      
    14 00000008 613D2000                    A db 'a= ', 0
    15 0000000C 623D2000                    B db 'b= ', 0
    16 00000010 256400                      format db '%d', 0
    17 00000013 3C25643E2A3C25643E-         result db '<%d>*<%d>=<%d>', 0
    17 0000001C 3D3C25643E00       
    18                                  
    19                                  segment code use32 class=code
    20                                      start:
    21 00000000 68[08000000]                    push dword A
    22 00000005 FF15[00000000]                  call [printf]
    23 0000000B 83C404                          add esp, 4
    24                                          
    25 0000000E 68[00000000]                    push dword a
    26 00000013 68[10000000]                    push format
    27 00000018 FF15[00000000]                  call [scanf]
    28 0000001E 83C408                          add esp, 8
    29                                          
    30 00000021 68[0C000000]                    push dword B
    31 00000026 FF15[00000000]                  call [printf]
    32 0000002C 83C404                          add esp, 4
    33                                          
    34 0000002F 68[04000000]                    push dword b
    35 00000034 68[10000000]                    push format
    36 00000039 FF15[00000000]                  call [scanf]
    37 0000003F 83C408                          add esp, 8
    38                                          
    39 00000042 A1[00000000]                    mov eax, [a]
    40 00000047 F625[04000000]                  mul byte[b]
    41                                          
    42 0000004D 50                              push eax
    43 0000004E FF35[04000000]                  push dword [b]
    44 00000054 FF35[00000000]                  push dword [a]
    45 0000005A 68[13000000]                    push result
    46 0000005F FF15[00000000]                  call [printf]
    47 00000065 83C410                          add esp, 16
    48                                          
    49                                          
    50 00000068 6A00                            push dword 0
    51 0000006A FF15[00000000]                  call [exit]

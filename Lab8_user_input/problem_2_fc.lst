     1                                  ;  how can i make it to show the actual signed value not it s complementary code
     2                                  bits 32
     3                                  
     4                                  global start
     5                                  
     6                                  extern exit, printf, scanf
     7                                  import exit msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 00000000                    a dd 0  ; will store first value
    13 00000004 00000000                    b dd 0  ; will store second value
    14                                      
    15 00000008 74686520726573756C-         result db "the result is %i", 0
    15 00000011 7420697320256900   
    16 00000019 613D2000                    A db "a= ", 0
    17 0000001D 623D2000                    B db "b= ", 0
    18 00000021 256900                      format db "%i", 0
    19                                      
    20                                  segment code use32 class=code
    21                                      start:
    22                                      
    23 00000000 68[19000000]                    push dword A    ; we will print 'a= '
    24 00000005 FF15[00000000]                  call [printf]
    25 0000000B 83C404                          add esp, 4*1
    26                                          
    27 0000000E 68[00000000]                    push dword a    ; we will read a
    28 00000013 68[21000000]                    push dword format
    29 00000018 FF15[00000000]                  call [scanf]
    30 0000001E 83C408                          add esp, 4*2
    31                                          
    32 00000021 68[1D000000]                    push dword B    ;we will print 'b= '
    33 00000026 FF15[00000000]                  call [printf]
    34 0000002C 83C404                          add esp, 4*1
    35                                          
    36 0000002F 68[04000000]                    push dword b    ; we will read 'b= '
    37 00000034 68[21000000]                    push dword format
    38 00000039 FF15[00000000]                  call [scanf]
    39 0000003F 83C408                          add esp, 4*2
    40                                          
    41 00000042 B800000000                      mov eax, 0
    42 00000047 66A1[00000000]                  mov ax, [a] ;we calculate the value of a/b (signed) and store it in al
    43 0000004D 8A1D[04000000]                  mov bl, [b]
    44 00000053 F6FB                            idiv bl ; al:= a/b
    45 00000055 6698                            cbw
    46 00000057 98                              cwde
    47                                          
    48 00000058 50                              push eax     ; we print 'the result is ' a/b
    49 00000059 68[08000000]                    push dword result
    50 0000005E FF15[00000000]                  call [printf]
    51 00000064 83C408                          add esp, 4*2
    52                                          
    53 00000067 6A00                            push dword 0
    54 00000069 FF15[00000000]                  call [exit]
    55                                          
